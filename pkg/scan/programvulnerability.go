package scan

import (
    "fmt"

    "172.16.2.38/neumannlyu/gobinscan/pkg/sql"
    "github.com/fatih/color"
)

func scanProgramVulnerability() {
    // 分析程序漏洞
    _cfgPtr.Logs.CommonLog.Info("开始分析二进制可执行程序漏洞...")
    fmt.Println()
    // * 查找数据库
    for _, elffile := range _knownElfFile {
        vulnerabilities, err := sql.Isql.GetProgramVulnerabilities(&elffile)
        if err != nil && err.Error() != "not found version" {
            continue
        }
        if len(vulnerabilities) == 0 {
            _cfgPtr.Logs.Pass.Logln(fmt.Sprintf("%-60s", elffile.Name))
            continue
        }
        for _, vulnerablity := range vulnerabilities {
            printf := color.New(
                color.BgYellow, color.FgRed, color.Bold).PrintfFunc()
            printf("\n%-80s\n%-80s\n%-80s\n%-80s\n%-80s\n%-80s\n%-80s\n%-80s",
                "!!! Found Vuln Info !!!",
                fmt.Sprintf("漏洞编号: %s", vulnerablity.ID),
                fmt.Sprintf("漏洞程序: %s", vulnerablity.TargetOfAttack),
                fmt.Sprintf("影响范围: %s", vulnerablity.AffectedVersion),
                fmt.Sprintf("漏洞类型: %s", vulnerablity.Type),
                fmt.Sprintf("危害程度: %d", vulnerablity.Severity),
                fmt.Sprintf("漏洞描述: %s", vulnerablity.Description),
                fmt.Sprintf("修复建议: %s", vulnerablity.FixSuggestion),
            )
            fmt.Println()
        }
        // 添加到result
        _report.Programvulnerablities = append(
            _report.Programvulnerablities, vulnerabilities...)
    }

}
